# project.yml for vytronics.project demo project
#
{

    #Define templates that can be aliased later in the file
    #Note that the templates array itself has no meaning to the
    #application but can be used by tooling. There are no guideline
    #yet for defining tool friendly templating. Will leave that to
    #the community for input
    templates: [
  
      #Tag value_info template for defining a NORMAL|ALARM
      #discrete tag
      &NO_ALM_VALUE_T { # This is the tag ID
        #The value_info object is used to assign states based
        #on the raw telemetry data
            type: "discrete",
            map: [  { value: 0, state: "NORMAL", almprior: 0 },
                    { value: 1, state: "ALARM", almprior: 1 } ],
            comment: "Normally open contact minor alarm."
      }
    ],
    
    # Server section - server config vars
    server: {
        listen_ip: !!vy/env "OPENSHIFT_NODEJS_IP:localhost",
        listen_port: !!vy/env "OPENSHIFT_NODEJS_PORT:8000"
    },

    # Drivers section - No drivers listed. Project will load only the built in
    # sys and sim drivers. A Modbus driver module will be available for the first
    # stable release.
    drivers: {
    },
    
    # Tags section - define HMI tags here
    tags: {
        sim-random-binary: { # This is the tag ID
                    
            driverinfo: { # This is how you link tags too driver data sources
            
                id: "sim", # link to built in sim driver
                
                # Specify the item name. This is driver specific. For sim driver
                # the following links to an int that will change to a new random value
                # every 1000ms with initial value 1 and range 0-1.
                item: "randomInt:1000:1:0:1:sim-discrete"
            }
        },
        #Example discrete type tag. The convert object is used to assign states based
        #on the raw telemetry data.
        sim-binary-state: {         
            driverinfo: { id: "sim", item: "randomInt:1000:1:0:1:sim-binary" },
            #Example using a template to define value_info. See templates section at top of file
            value_info: { <<: *NO_ALM_VALUE_T }
        },
        sim-increment: {
            defaultValue: 0,
            driverinfo: { id: "sim", item: "increment:1000:0:10" }
        },
        sim-random-delta: {
            defaultValue: 0,
            driverinfo: { id: "sim", item: "randomDelta:1000:50:0:100:5" }
        }
    }
    
    # Other sections in later releases will allow you to specify
    # authentication/authorization, historian database plugins.
}
